/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package wfdb;

 import java.util.LinkedList;

public class wfdbJNI {
  public final static native void WFDB_Siginfo_fname_set(long jarg1, WFDB_Siginfo jarg1_, String jarg2);
  public final static native String WFDB_Siginfo_fname_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_desc_set(long jarg1, WFDB_Siginfo jarg1_, String jarg2);
  public final static native String WFDB_Siginfo_desc_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_units_set(long jarg1, WFDB_Siginfo jarg1_, String jarg2);
  public final static native String WFDB_Siginfo_units_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_gain_set(long jarg1, WFDB_Siginfo jarg1_, double jarg2);
  public final static native double WFDB_Siginfo_gain_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_initval_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_initval_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_group_set(long jarg1, WFDB_Siginfo jarg1_, long jarg2);
  public final static native long WFDB_Siginfo_group_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_fmt_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_fmt_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_spf_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_spf_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_bsize_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_bsize_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_adcres_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_adcres_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_adczero_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_adczero_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_baseline_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_baseline_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_nsamp_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_nsamp_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native void WFDB_Siginfo_cksum_set(long jarg1, WFDB_Siginfo jarg1_, int jarg2);
  public final static native int WFDB_Siginfo_cksum_get(long jarg1, WFDB_Siginfo jarg1_);
  public final static native long new_WFDB_Siginfo();
  public final static native void delete_WFDB_Siginfo(long jarg1);
  public final static native void WFDB_Calinfo_low_set(long jarg1, WFDB_Calinfo jarg1_, double jarg2);
  public final static native double WFDB_Calinfo_low_get(long jarg1, WFDB_Calinfo jarg1_);
  public final static native void WFDB_Calinfo_high_set(long jarg1, WFDB_Calinfo jarg1_, double jarg2);
  public final static native double WFDB_Calinfo_high_get(long jarg1, WFDB_Calinfo jarg1_);
  public final static native void WFDB_Calinfo_scale_set(long jarg1, WFDB_Calinfo jarg1_, double jarg2);
  public final static native double WFDB_Calinfo_scale_get(long jarg1, WFDB_Calinfo jarg1_);
  public final static native void WFDB_Calinfo_sigtype_set(long jarg1, WFDB_Calinfo jarg1_, String jarg2);
  public final static native String WFDB_Calinfo_sigtype_get(long jarg1, WFDB_Calinfo jarg1_);
  public final static native void WFDB_Calinfo_units_set(long jarg1, WFDB_Calinfo jarg1_, String jarg2);
  public final static native String WFDB_Calinfo_units_get(long jarg1, WFDB_Calinfo jarg1_);
  public final static native void WFDB_Calinfo_caltype_set(long jarg1, WFDB_Calinfo jarg1_, int jarg2);
  public final static native int WFDB_Calinfo_caltype_get(long jarg1, WFDB_Calinfo jarg1_);
  public final static native long new_WFDB_Calinfo();
  public final static native void delete_WFDB_Calinfo(long jarg1);
  public final static native void WFDB_Anninfo_name_set(long jarg1, WFDB_Anninfo jarg1_, String jarg2);
  public final static native String WFDB_Anninfo_name_get(long jarg1, WFDB_Anninfo jarg1_);
  public final static native void WFDB_Anninfo_stat_set(long jarg1, WFDB_Anninfo jarg1_, int jarg2);
  public final static native int WFDB_Anninfo_stat_get(long jarg1, WFDB_Anninfo jarg1_);
  public final static native long new_WFDB_Anninfo();
  public final static native void delete_WFDB_Anninfo(long jarg1);
  public final static native void WFDB_Annotation_time_set(long jarg1, WFDB_Annotation jarg1_, int jarg2);
  public final static native int WFDB_Annotation_time_get(long jarg1, WFDB_Annotation jarg1_);
  public final static native void WFDB_Annotation_anntyp_set(long jarg1, WFDB_Annotation jarg1_, int jarg2);
  public final static native int WFDB_Annotation_anntyp_get(long jarg1, WFDB_Annotation jarg1_);
  public final static native void WFDB_Annotation_subtyp_set(long jarg1, WFDB_Annotation jarg1_, int jarg2);
  public final static native int WFDB_Annotation_subtyp_get(long jarg1, WFDB_Annotation jarg1_);
  public final static native void WFDB_Annotation_chan_set(long jarg1, WFDB_Annotation jarg1_, int jarg2);
  public final static native int WFDB_Annotation_chan_get(long jarg1, WFDB_Annotation jarg1_);
  public final static native void WFDB_Annotation_num_set(long jarg1, WFDB_Annotation jarg1_, int jarg2);
  public final static native int WFDB_Annotation_num_get(long jarg1, WFDB_Annotation jarg1_);
  public final static native void WFDB_Annotation_aux_set(long jarg1, WFDB_Annotation jarg1_, String jarg2);
  public final static native String WFDB_Annotation_aux_get(long jarg1, WFDB_Annotation jarg1_);
  public final static native long new_WFDB_Annotation();
  public final static native void delete_WFDB_Annotation(long jarg1);
  public final static native long new_intArray(int jarg1);
  public final static native void delete_intArray(long jarg1);
  public final static native int intArray_getitem(long jarg1, intArray jarg1_, int jarg2);
  public final static native void intArray_setitem(long jarg1, intArray jarg1_, int jarg2, int jarg3);
  public final static native long intArray_cast(long jarg1, intArray jarg1_);
  public final static native long intArray_frompointer(long jarg1);
  public final static native long new_WFDB_SampleArray(int jarg1);
  public final static native void delete_WFDB_SampleArray(long jarg1);
  public final static native int WFDB_SampleArray_getitem(long jarg1, WFDB_SampleArray jarg1_, int jarg2);
  public final static native void WFDB_SampleArray_setitem(long jarg1, WFDB_SampleArray jarg1_, int jarg2, int jarg3);
  public final static native long WFDB_SampleArray_cast(long jarg1, WFDB_SampleArray jarg1_);
  public final static native long WFDB_SampleArray_frompointer(long jarg1);
  public final static native long new_WFDB_SiginfoArray(int jarg1);
  public final static native void delete_WFDB_SiginfoArray(long jarg1);
  public final static native long WFDB_SiginfoArray_getitem(long jarg1, WFDB_SiginfoArray jarg1_, int jarg2);
  public final static native void WFDB_SiginfoArray_setitem(long jarg1, WFDB_SiginfoArray jarg1_, int jarg2, long jarg3, WFDB_Siginfo jarg3_);
  public final static native long WFDB_SiginfoArray_cast(long jarg1, WFDB_SiginfoArray jarg1_);
  public final static native long WFDB_SiginfoArray_frompointer(long jarg1, WFDB_Siginfo jarg1_);
  public final static native long new_WFDB_AnninfoArray(int jarg1);
  public final static native void delete_WFDB_AnninfoArray(long jarg1);
  public final static native long WFDB_AnninfoArray_getitem(long jarg1, WFDB_AnninfoArray jarg1_, int jarg2);
  public final static native void WFDB_AnninfoArray_setitem(long jarg1, WFDB_AnninfoArray jarg1_, int jarg2, long jarg3, WFDB_Anninfo jarg3_);
  public final static native long WFDB_AnninfoArray_cast(long jarg1, WFDB_AnninfoArray jarg1_);
  public final static native long WFDB_AnninfoArray_frompointer(long jarg1, WFDB_Anninfo jarg1_);
  public final static native long new_WFDB_AnnotationArray(int jarg1);
  public final static native void delete_WFDB_AnnotationArray(long jarg1);
  public final static native long WFDB_AnnotationArray_getitem(long jarg1, WFDB_AnnotationArray jarg1_, int jarg2);
  public final static native void WFDB_AnnotationArray_setitem(long jarg1, WFDB_AnnotationArray jarg1_, int jarg2, long jarg3, WFDB_Annotation jarg3_);
  public final static native long WFDB_AnnotationArray_cast(long jarg1, WFDB_AnnotationArray jarg1_);
  public final static native long WFDB_AnnotationArray_frompointer(long jarg1, WFDB_Annotation jarg1_);
  public final static native int NOTQRS_get();
  public final static native int NORMAL_get();
  public final static native int LBBB_get();
  public final static native int RBBB_get();
  public final static native int ABERR_get();
  public final static native int PVC_get();
  public final static native int FUSION_get();
  public final static native int NPC_get();
  public final static native int APC_get();
  public final static native int SVPB_get();
  public final static native int VESC_get();
  public final static native int NESC_get();
  public final static native int PACE_get();
  public final static native int UNKNOWN_get();
  public final static native int NOISE_get();
  public final static native int ARFCT_get();
  public final static native int STCH_get();
  public final static native int TCH_get();
  public final static native int SYSTOLE_get();
  public final static native int DIASTOLE_get();
  public final static native int NOTE_get();
  public final static native int MEASURE_get();
  public final static native int PWAVE_get();
  public final static native int BBB_get();
  public final static native int PACESP_get();
  public final static native int TWAVE_get();
  public final static native int RHYTHM_get();
  public final static native int UWAVE_get();
  public final static native int LEARN_get();
  public final static native int FLWAV_get();
  public final static native int VFON_get();
  public final static native int VFOFF_get();
  public final static native int AESC_get();
  public final static native int SVESC_get();
  public final static native int LINK_get();
  public final static native int NAPC_get();
  public final static native int PFUS_get();
  public final static native int WFON_get();
  public final static native int PQ_get();
  public final static native int WFOFF_get();
  public final static native int JPT_get();
  public final static native int RONT_get();
  public final static native int ACMAX_get();
  public final static native int WFDB_MAJOR_get();
  public final static native int WFDB_MINOR_get();
  public final static native int WFDB_RELEASE_get();
  public final static native int WFDB_NETFILES_get();
  public final static native int WFDB_NETFILES_LIBCURL_get();
  public final static native int WFDB_INVALID_SAMPLE_get();
  public final static native int WFDB_MAXANN_get();
  public final static native int WFDB_MAXSIG_get();
  public final static native int WFDB_MAXSPF_get();
  public final static native int WFDB_MAXRNL_get();
  public final static native int WFDB_MAXUSL_get();
  public final static native int WFDB_MAXDSL_get();
  public final static native int WFDB_READ_get();
  public final static native int WFDB_WRITE_get();
  public final static native int WFDB_AHA_READ_get();
  public final static native int WFDB_AHA_WRITE_get();
  public final static native int WFDB_APPEND_get();
  public final static native int WFDB_NFMTS_get();
  public final static native double WFDB_DEFFREQ_get();
  public final static native double WFDB_DEFGAIN_get();
  public final static native int WFDB_DEFRES_get();
  public final static native int WFDB_LOWRES_get();
  public final static native int WFDB_HIGHRES_get();
  public final static native int WFDB_GVPAD_get();
  public final static native int WFDB_AC_COUPLED_get();
  public final static native int WFDB_DC_COUPLED_get();
  public final static native int WFDB_CAL_SQUARE_get();
  public final static native int WFDB_CAL_SINE_get();
  public final static native int WFDB_CAL_SAWTOOTH_get();
  public final static native int WFDB_CAL_UNDEF_get();
  public final static native void WFDB_seginfo_recname_set(long jarg1, WFDB_seginfo jarg1_, String jarg2);
  public final static native String WFDB_seginfo_recname_get(long jarg1, WFDB_seginfo jarg1_);
  public final static native void WFDB_seginfo_nsamp_set(long jarg1, WFDB_seginfo jarg1_, int jarg2);
  public final static native int WFDB_seginfo_nsamp_get(long jarg1, WFDB_seginfo jarg1_);
  public final static native void WFDB_seginfo_samp0_set(long jarg1, WFDB_seginfo jarg1_, int jarg2);
  public final static native int WFDB_seginfo_samp0_get(long jarg1, WFDB_seginfo jarg1_);
  public final static native long new_WFDB_seginfo();
  public final static native void delete_WFDB_seginfo(long jarg1);
  public final static native int annopen(String jarg1, long jarg2, WFDB_Anninfo jarg2_, long jarg3);
  public final static native int isigopen(String jarg1, long jarg2, WFDB_Siginfo jarg2_, int jarg3);
  public final static native int osigopen(String jarg1, long jarg2, WFDB_Siginfo jarg2_, long jarg3);
  public final static native int osigfopen(long jarg1, WFDB_Siginfo jarg1_, long jarg2);
  public final static native int wfdbinit(String jarg1, long jarg2, WFDB_Anninfo jarg2_, long jarg3, long jarg4, WFDB_Siginfo jarg4_, long jarg5);
  public final static native int findsig(String jarg1);
  public final static native int getspf();
  public final static native void setgvmode(int jarg1);
  public final static native int getgvmode();
  public final static native int setifreq(double jarg1);
  public final static native double getifreq();
  public final static native int getvec(long jarg1);
  public final static native int getframe(long jarg1);
  public final static native int putvec(long jarg1);
  public final static native int getann(long jarg1, long jarg2, WFDB_Annotation jarg2_);
  public final static native int ungetann(long jarg1, long jarg2, WFDB_Annotation jarg2_);
  public final static native int putann(long jarg1, long jarg2, WFDB_Annotation jarg2_);
  public final static native int isigsettime(int jarg1);
  public final static native int isgsettime(long jarg1, int jarg2);
  public final static native int tnextvec(long jarg1, int jarg2);
  public final static native int iannsettime(int jarg1);
  public final static native String ecgstr(int jarg1);
  public final static native int strecg(String jarg1);
  public final static native int setecgstr(int jarg1, String jarg2);
  public final static native String annstr(int jarg1);
  public final static native int strann(String jarg1);
  public final static native int setannstr(int jarg1, String jarg2);
  public final static native String anndesc(int jarg1);
  public final static native int setanndesc(int jarg1, String jarg2);
  public final static native void setafreq(double jarg1);
  public final static native double getafreq();
  public final static native void iannclose(long jarg1);
  public final static native void oannclose(long jarg1);
  public final static native int wfdb_isann(int jarg1);
  public final static native int wfdb_isqrs(int jarg1);
  public final static native int wfdb_setisqrs(int jarg1, int jarg2);
  public final static native int wfdb_map1(int jarg1);
  public final static native int wfdb_setmap1(int jarg1, int jarg2);
  public final static native int wfdb_map2(int jarg1);
  public final static native int wfdb_setmap2(int jarg1, int jarg2);
  public final static native int wfdb_ammap(int jarg1);
  public final static native int wfdb_mamap(int jarg1, int jarg2);
  public final static native int wfdb_annpos(int jarg1);
  public final static native int wfdb_setannpos(int jarg1, int jarg2);
  public final static native String timstr(int jarg1);
  public final static native String mstimstr(int jarg1);
  public final static native int strtim(String jarg1);
  public final static native String datstr(int jarg1);
  public final static native int strdat(String jarg1);
  public final static native int adumuv(long jarg1, int jarg2);
  public final static native int muvadu(long jarg1, int jarg2);
  public final static native double aduphys(long jarg1, int jarg2);
  public final static native int physadu(long jarg1, double jarg2);
  public final static native int sample(long jarg1, int jarg2);
  public final static native int sample_valid();
  public final static native int calopen(String jarg1);
  public final static native int getcal(String jarg1, String jarg2, long jarg3, WFDB_Calinfo jarg3_);
  public final static native int putcal(long jarg1, WFDB_Calinfo jarg1_);
  public final static native int newcal(String jarg1);
  public final static native void flushcal();
  public final static native String getinfo(String jarg1);
  public final static native int putinfo(String jarg1);
  public final static native int setinfo(String jarg1);
  public final static native void wfdb_freeinfo();
  public final static native int newheader(String jarg1);
  public final static native int setheader(String jarg1, long jarg2, WFDB_Siginfo jarg2_, long jarg3);
  public final static native int setmsheader(String jarg1, long jarg2, long jarg3);
  public final static native int getseginfo(long jarg1);
  public final static native int wfdbgetskew(long jarg1);
  public final static native void wfdbsetiskew(long jarg1, int jarg2);
  public final static native void wfdbsetskew(long jarg1, int jarg2);
  public final static native int wfdbgetstart(long jarg1);
  public final static native void wfdbsetstart(long jarg1, int jarg2);
  public final static native int wfdbputprolog(String jarg1, int jarg2, long jarg3);
  public final static native void wfdbquit();
  public final static native double sampfreq(String jarg1);
  public final static native int setsampfreq(double jarg1);
  public final static native double getcfreq();
  public final static native void setcfreq(double jarg1);
  public final static native double getbasecount();
  public final static native void setbasecount(double jarg1);
  public final static native int setbasetime(String jarg1);
  public final static native void wfdbquiet();
  public final static native void wfdbverbose();
  public final static native String wfdberror();
  public final static native void setwfdb(String jarg1);
  public final static native String getwfdb();
  public final static native void resetwfdb();
  public final static native int setibsize(int jarg1);
  public final static native int setobsize(int jarg1);
  public final static native String wfdbfile(String jarg1, String jarg2);
  public final static native void wfdbflush();
  public final static native void wfdbmemerr(int jarg1);
  public final static native String wfdbversion();
  public final static native String wfdbldflags();
  public final static native String wfdbcflags();
  public final static native String wfdbdefwfdb();
  public final static native String wfdbdefwfdbcal();

  static {
        
	boolean jniNotLoaded = true;

        try {
                System.loadLibrary("wfdbjava");
                jniNotLoaded = false;
        } catch (UnsatisfiedLinkError e) {
                System.err.println("System.loadLibrary('wfdbjava') failed, trying System.load()");
        }

        // Load the correct jni shared library for the platform, or die trying

        String osName = System.getProperty("os.name");  // the os we are running on (Windows, Mac, or Linux)
	LinkedList<String> jniLibPaths = new LinkedList<String> ();  // List of paths to check

	if (System.getProperty("java.library.path") != null ) {
	  // if the java.library.path property is set, make that the first path to check
	  for ( String p : System.getProperty("java.library.path").split("[:;]") ) {
	    jniLibPaths.add(p); 
	  }       
	}
	String jniLibName;
	if ( osName.indexOf("Linux") > -1 ) {
	    jniLibName = "libwfdbjava.so";
            // Some locations to try on Linux
	    jniLibPaths.add("/usr/local/lib");
	    jniLibPaths.add("/usr/lib");
	    jniLibPaths.add("/opt/wfdb/lib");
	    jniLibPaths.add("/usr/local/lib64");
	    jniLibPaths.add("/usr/lib64");
	    jniLibPaths.add("/opt/wfdb/lib64");
	} else if ( osName.indexOf("Windows") > -1 ) {
	    jniLibName = "wfdbjava.dll";
            // Some locations to try on Windows
	    jniLibPaths.add("c:\\wfdb\\lib");
	    jniLibPaths.add("c:\\cygwin\\wfdb\\lib");
	    jniLibPaths.add("c:\\Program Files\\wfdb\\lib");
	    jniLibPaths.add("c:\\system32");
	} else if ( osName.indexOf("Mac OS X") > -1 ) {	  
	    jniLibName = "libwfdbjava.dylib";	    
            // Some locations to try on Mac
	    jniLibPaths.add("/opt/wfdb/lib");
	    jniLibPaths.add("/opt/local/lib");
	    jniLibPaths.add("/usr/lib");
	    jniLibPaths.add("/usr/local/lib");
	} else {
	    jniLibName = "libwfdbjava.so"; // Solaris and BSD use .so, 
	                                          // does any other OS matter
	    // you'll have to use java.library.path on these platforms
	}

	String sysLibraryPath = jniLibPaths.poll(); // get the first path
	while ( jniNotLoaded & sysLibraryPath != null ) {
	  try {
	      //System.err.println("Trying to load " + jniLibName + " from " + sysLibraryPath);
	      System.load(sysLibraryPath+"/"+jniLibName);
	      jniNotLoaded = false; // this line will be reached only if System.load works
	  } catch (UnsatisfiedLinkError e) {
	    sysLibraryPath = jniLibPaths.poll(); // try the next path	   
	  }
	}

	if (jniNotLoaded) {
	      // oh, no the jni library did not load!
	      System.err.println();
	      System.err.println("Error: Could not load wfdb wrappers");
	      System.err.println("no " + jniLibName + " in java.library.path="+sysLibraryPath);
	      //System.err.println(osName);
	      System.exit(1);
	}          

  }


  public final static native void _nvsig_set(int jarg1);
  public final static native int _nvsig_get();
  public final static native int spy_nvsig();
  public final static native void _nsamps_set(int jarg1);
  public final static native int _nsamps_get();
  public final static native int spy_nsamps();
  public final static native int getvec2(long jarg1, int jarg2);
  public final static native int getvec2p(long jarg1, int jarg2);
}
